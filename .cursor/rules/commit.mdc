---
description: Git コミットメッセージ作成ルール
globs:
alwaysApply: true
---
# コミットの手順
- ユーザーから「コミットしてください」「commitして」などの指示を受けた場合は、本ルールに従ってコミットメッセージを提案・生成すること。
- 自主的にcommitする場合も、本ルールに従ってコミットメッセージを作成すること。
- commit する際は必ず、 `git status` および `git diff` を確認し、変更内容をレビューしてからメッセージを作成すること。
- 複数の変更が含まれる場合は、適切な粒度に分割してコミットすること。
  - 例えば、Cursor Rule はコミットを分けること


# コミットメッセージのルール
- コミットメッセージは **必ず日本語** で記述すること。
- [Conventional Commits](https://www.conventionalcommits.org/ja/v1.0.0/) の形式に従うこと。
- メッセージの形式は以下のとおり：

  <type>(<scope>): <短い説明>

  <本文（任意）>

  <フッター（任意、例: BREAKING CHANGE, 関連Issue など）>

- 使用可能な `<type>` は以下を参考にすること：
  - feat: 新機能の追加
  - fix: バグ修正
  - docs: ドキュメントの変更
  - style: 構文・フォーマットのみの変更（意味に影響しない）
  - refactor: 意味を変えないリファクタリング
  - perf: パフォーマンスの改善
  - test: テストコードの追加・修正
  - chore: ビルド・CI・依存関係などのメンテナンス的変更

- `<scope>` には対象となる機能名やディレクトリ名を指定すること。該当しない場合は省略可。
- `git commit` を実行する前に `git status` を実行し、 add 漏れがないか確認すること。

